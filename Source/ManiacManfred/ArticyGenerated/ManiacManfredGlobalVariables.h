// articy Software GmbH & Co. KG
/** This code file was generated by ArticyImporter. Changes to this file will get lost once the code is regenerated. */

#pragma once

#include "ArticyRuntime/Public/ArticyGlobalVariables.h"
#include "ManiacManfredGlobalVariables.generated.h"
#pragma warning(push)
#pragma warning(disable: 4883) //<disable "optimization cannot be applied due to function size" compile error.

UCLASS(BlueprintType)
class MANIACMANFRED_API UManiacManfredGameStateVariables : public UArticyBaseVariableSet
{
	GENERATED_BODY()
	
public:
	/** False until the first dialogue with the therapist. */
	UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category="GameState")
	UArticyBool* awake = nullptr;
	/** True after talking about that topic with the therapist. */
	UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category="GameState")
	UArticyBool* looney_bin = nullptr;
	/** True after talking about that topic with the therapist. */
	UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category="GameState")
	UArticyBool* memory = nullptr;
	/** True after knocking down the therapist in the cell. */
	UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category="GameState")
	UArticyBool* therapist_knockedOut = nullptr;
	/** True after the therapist left the cell. */
	UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category="GameState")
	UArticyBool* therapist_gone = nullptr;
	/** True as soon as the cell door is open. */
	UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category="GameState")
	UArticyBool* door_open = nullptr;
	/** True after convincing the therapist.  */
	UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category="GameState")
	UArticyBool* therapist_convinced = nullptr;
	/** True after getting the key from the knocked-down therapist. */
	UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category="GameState")
	UArticyBool* looted = nullptr;
	/** True after hearing the unknown voice from the cellar. */
	UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category="GameState")
	UArticyBool* listenedToVoice = nullptr;
	/** True after clicking on the lobby door. */
	UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category="GameState")
	UArticyBool* dialogue_beforeLobby = nullptr;
	/** True after trying to enter the cellar. */
	UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category="GameState")
	UArticyBool* dialogue_beforeCellar = nullptr;
	/** True after talking to the hamster. */
	UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category="GameState")
	UArticyBool* hamster_talkedTo = nullptr;
	/** True after getting the hamster out of his cage. */
	UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category="GameState")
	UArticyBool* hamster_saved = nullptr;
	/** True after opening the overflow in the cellar. */
	UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category="GameState")
	UArticyBool* overflow_open = nullptr;
	/** True after reading the book in the cellar. */
	UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category="GameState")
	UArticyBool* book_read = nullptr;
	/** True after opening the locker. */
	UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category="GameState")
	UArticyBool* locker_open = nullptr;
	/** The current number in a try to open the locker. */
	UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category="GameState")
	UArticyInt* lock_number = nullptr;
	/** The amount of correct numbers in a try to open the locker in the cellar. */
	UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category="GameState")
	UArticyInt* lock_correctNumbers = nullptr;
	/** True if the exit in the lobby is open. */
	UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category="GameState")
	UArticyBool* exit_open = nullptr;
	/** True after knocking the therapist down in the lobby. */
	UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category="GameState")
	UArticyBool* therapist_down = nullptr;
	/** True after handing the sleeping pills to the therapist. */
	UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category="GameState")
	UArticyBool* therapist_knockedOut2 = nullptr;
	/** True after talking to the guard. */
	UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category="GameState")
	UArticyBool* guard_met = nullptr;
	/** True after knocking out the guard in the lobby. */
	UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category="GameState")
	UArticyBool* guard_knockedOut = nullptr;
	/** True if the guard was drugged */
	UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category="GameState")
	UArticyBool* guard_drugged = nullptr;
	
	 UManiacManfredGameStateVariables() 
	{
		awake = CreateDefaultSubobject<UArticyBool>("awake");
		looney_bin = CreateDefaultSubobject<UArticyBool>("looney_bin");
		memory = CreateDefaultSubobject<UArticyBool>("memory");
		therapist_knockedOut = CreateDefaultSubobject<UArticyBool>("therapist_knockedOut");
		therapist_gone = CreateDefaultSubobject<UArticyBool>("therapist_gone");
		door_open = CreateDefaultSubobject<UArticyBool>("door_open");
		therapist_convinced = CreateDefaultSubobject<UArticyBool>("therapist_convinced");
		looted = CreateDefaultSubobject<UArticyBool>("looted");
		listenedToVoice = CreateDefaultSubobject<UArticyBool>("listenedToVoice");
		dialogue_beforeLobby = CreateDefaultSubobject<UArticyBool>("dialogue_beforeLobby");
		dialogue_beforeCellar = CreateDefaultSubobject<UArticyBool>("dialogue_beforeCellar");
		hamster_talkedTo = CreateDefaultSubobject<UArticyBool>("hamster_talkedTo");
		hamster_saved = CreateDefaultSubobject<UArticyBool>("hamster_saved");
		overflow_open = CreateDefaultSubobject<UArticyBool>("overflow_open");
		book_read = CreateDefaultSubobject<UArticyBool>("book_read");
		locker_open = CreateDefaultSubobject<UArticyBool>("locker_open");
		lock_number = CreateDefaultSubobject<UArticyInt>("lock_number");
		lock_correctNumbers = CreateDefaultSubobject<UArticyInt>("lock_correctNumbers");
		exit_open = CreateDefaultSubobject<UArticyBool>("exit_open");
		therapist_down = CreateDefaultSubobject<UArticyBool>("therapist_down");
		therapist_knockedOut2 = CreateDefaultSubobject<UArticyBool>("therapist_knockedOut2");
		guard_met = CreateDefaultSubobject<UArticyBool>("guard_met");
		guard_knockedOut = CreateDefaultSubobject<UArticyBool>("guard_knockedOut");
		guard_drugged = CreateDefaultSubobject<UArticyBool>("guard_drugged");
	}
	
	void Init(UArticyGlobalVariables* const Store) 
	{
		/** initialize the variables */
		awake->Init<UArticyBool>(this, Store, TEXT("GameState.awake"), false);
		this->Variables.Add(awake);
		looney_bin->Init<UArticyBool>(this, Store, TEXT("GameState.looney_bin"), false);
		this->Variables.Add(looney_bin);
		memory->Init<UArticyBool>(this, Store, TEXT("GameState.memory"), false);
		this->Variables.Add(memory);
		therapist_knockedOut->Init<UArticyBool>(this, Store, TEXT("GameState.therapist_knockedOut"), false);
		this->Variables.Add(therapist_knockedOut);
		therapist_gone->Init<UArticyBool>(this, Store, TEXT("GameState.therapist_gone"), false);
		this->Variables.Add(therapist_gone);
		door_open->Init<UArticyBool>(this, Store, TEXT("GameState.door_open"), false);
		this->Variables.Add(door_open);
		therapist_convinced->Init<UArticyBool>(this, Store, TEXT("GameState.therapist_convinced"), false);
		this->Variables.Add(therapist_convinced);
		looted->Init<UArticyBool>(this, Store, TEXT("GameState.looted"), false);
		this->Variables.Add(looted);
		listenedToVoice->Init<UArticyBool>(this, Store, TEXT("GameState.listenedToVoice"), false);
		this->Variables.Add(listenedToVoice);
		dialogue_beforeLobby->Init<UArticyBool>(this, Store, TEXT("GameState.dialogue_beforeLobby"), false);
		this->Variables.Add(dialogue_beforeLobby);
		dialogue_beforeCellar->Init<UArticyBool>(this, Store, TEXT("GameState.dialogue_beforeCellar"), false);
		this->Variables.Add(dialogue_beforeCellar);
		hamster_talkedTo->Init<UArticyBool>(this, Store, TEXT("GameState.hamster_talkedTo"), false);
		this->Variables.Add(hamster_talkedTo);
		hamster_saved->Init<UArticyBool>(this, Store, TEXT("GameState.hamster_saved"), false);
		this->Variables.Add(hamster_saved);
		overflow_open->Init<UArticyBool>(this, Store, TEXT("GameState.overflow_open"), false);
		this->Variables.Add(overflow_open);
		book_read->Init<UArticyBool>(this, Store, TEXT("GameState.book_read"), false);
		this->Variables.Add(book_read);
		locker_open->Init<UArticyBool>(this, Store, TEXT("GameState.locker_open"), false);
		this->Variables.Add(locker_open);
		lock_number->Init<UArticyInt>(this, Store, TEXT("GameState.lock_number"), 0);
		this->Variables.Add(lock_number);
		lock_correctNumbers->Init<UArticyInt>(this, Store, TEXT("GameState.lock_correctNumbers"), 0);
		this->Variables.Add(lock_correctNumbers);
		exit_open->Init<UArticyBool>(this, Store, TEXT("GameState.exit_open"), false);
		this->Variables.Add(exit_open);
		therapist_down->Init<UArticyBool>(this, Store, TEXT("GameState.therapist_down"), false);
		this->Variables.Add(therapist_down);
		therapist_knockedOut2->Init<UArticyBool>(this, Store, TEXT("GameState.therapist_knockedOut2"), false);
		this->Variables.Add(therapist_knockedOut2);
		guard_met->Init<UArticyBool>(this, Store, TEXT("GameState.guard_met"), false);
		this->Variables.Add(guard_met);
		guard_knockedOut->Init<UArticyBool>(this, Store, TEXT("GameState.guard_knockedOut"), false);
		this->Variables.Add(guard_knockedOut);
		guard_drugged->Init<UArticyBool>(this, Store, TEXT("GameState.guard_drugged"), false);
		this->Variables.Add(guard_drugged);
	}
};

UCLASS(BlueprintType)
class MANIACMANFRED_API UManiacManfredInventoryVariables : public UArticyBaseVariableSet
{
	GENERATED_BODY()
	
public:
	/** True after finding the crowbar in the cell. */
	UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category="Inventory")
	UArticyBool* crowbar = nullptr;
	/** True after getting the key from the therapist. */
	UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category="Inventory")
	UArticyBool* key = nullptr;
	/** True after receiving the opener from the hamster. */
	UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category="Inventory")
	UArticyBool* opener = nullptr;
	/** True after helping the hamster. */
	UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category="Inventory")
	UArticyBool* hamster = nullptr;
	/** True after finding the aluminium in the cellar. */
	UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category="Inventory")
	UArticyBool* aluminium = nullptr;
	/** True after creating the bomb. */
	UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category="Inventory")
	UArticyBool* bomb = nullptr;
	/** True after finding the plutonium in the cellar. */
	UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category="Inventory")
	UArticyBool* plutonium = nullptr;
	/** True after combining enriched plutonium with cable. */
	UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category="Inventory")
	UArticyBool* detonator = nullptr;
	/** True after combining plutonium with construction kit. */
	UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category="Inventory")
	UArticyBool* enrichedPlutonium = nullptr;
	/** True after finding the cable in the cellar. */
	UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category="Inventory")
	UArticyBool* cable = nullptr;
	/** True after finding the broom in the cellar. */
	UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category="Inventory")
	UArticyBool* broom = nullptr;
	/** True after finding the construction kit in the cellar. */
	UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category="Inventory")
	UArticyBool* constructionKit = nullptr;
	/** True after combining the banana with the sleeping pills. */
	UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category="Inventory")
	UArticyBool* bananaPill = nullptr;
	/** True after finding the banana in the lobby. */
	UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category="Inventory")
	UArticyBool* banana = nullptr;
	/** True after finding the sleeping pills in the lobby. */
	UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category="Inventory")
	UArticyBool* sleepingPills = nullptr;
	
	 UManiacManfredInventoryVariables() 
	{
		crowbar = CreateDefaultSubobject<UArticyBool>("crowbar");
		key = CreateDefaultSubobject<UArticyBool>("key");
		opener = CreateDefaultSubobject<UArticyBool>("opener");
		hamster = CreateDefaultSubobject<UArticyBool>("hamster");
		aluminium = CreateDefaultSubobject<UArticyBool>("aluminium");
		bomb = CreateDefaultSubobject<UArticyBool>("bomb");
		plutonium = CreateDefaultSubobject<UArticyBool>("plutonium");
		detonator = CreateDefaultSubobject<UArticyBool>("detonator");
		enrichedPlutonium = CreateDefaultSubobject<UArticyBool>("enrichedPlutonium");
		cable = CreateDefaultSubobject<UArticyBool>("cable");
		broom = CreateDefaultSubobject<UArticyBool>("broom");
		constructionKit = CreateDefaultSubobject<UArticyBool>("constructionKit");
		bananaPill = CreateDefaultSubobject<UArticyBool>("bananaPill");
		banana = CreateDefaultSubobject<UArticyBool>("banana");
		sleepingPills = CreateDefaultSubobject<UArticyBool>("sleepingPills");
	}
	
	void Init(UArticyGlobalVariables* const Store) 
	{
		/** initialize the variables */
		crowbar->Init<UArticyBool>(this, Store, TEXT("Inventory.crowbar"), false);
		this->Variables.Add(crowbar);
		key->Init<UArticyBool>(this, Store, TEXT("Inventory.key"), false);
		this->Variables.Add(key);
		opener->Init<UArticyBool>(this, Store, TEXT("Inventory.opener"), false);
		this->Variables.Add(opener);
		hamster->Init<UArticyBool>(this, Store, TEXT("Inventory.hamster"), false);
		this->Variables.Add(hamster);
		aluminium->Init<UArticyBool>(this, Store, TEXT("Inventory.aluminium"), false);
		this->Variables.Add(aluminium);
		bomb->Init<UArticyBool>(this, Store, TEXT("Inventory.bomb"), false);
		this->Variables.Add(bomb);
		plutonium->Init<UArticyBool>(this, Store, TEXT("Inventory.plutonium"), false);
		this->Variables.Add(plutonium);
		detonator->Init<UArticyBool>(this, Store, TEXT("Inventory.detonator"), false);
		this->Variables.Add(detonator);
		enrichedPlutonium->Init<UArticyBool>(this, Store, TEXT("Inventory.enrichedPlutonium"), false);
		this->Variables.Add(enrichedPlutonium);
		cable->Init<UArticyBool>(this, Store, TEXT("Inventory.cable"), false);
		this->Variables.Add(cable);
		broom->Init<UArticyBool>(this, Store, TEXT("Inventory.broom"), false);
		this->Variables.Add(broom);
		constructionKit->Init<UArticyBool>(this, Store, TEXT("Inventory.constructionKit"), false);
		this->Variables.Add(constructionKit);
		bananaPill->Init<UArticyBool>(this, Store, TEXT("Inventory.bananaPill"), false);
		this->Variables.Add(bananaPill);
		banana->Init<UArticyBool>(this, Store, TEXT("Inventory.banana"), false);
		this->Variables.Add(banana);
		sleepingPills->Init<UArticyBool>(this, Store, TEXT("Inventory.sleepingPills"), false);
		this->Variables.Add(sleepingPills);
	}
};

/** Global Articy Variables */
UCLASS(BlueprintType)
class MANIACMANFRED_API UManiacManfredGlobalVariables : public UArticyGlobalVariables
{
	GENERATED_BODY()
	
public:
	UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category="GameState")
	UManiacManfredGameStateVariables* GameState = nullptr;
	UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category="Inventory")
	UManiacManfredInventoryVariables* Inventory = nullptr;
	
	 UManiacManfredGlobalVariables() 
	{
		/** create the namespaces */
		GameState = CreateDefaultSubobject<UManiacManfredGameStateVariables>("GameState");
		Inventory = CreateDefaultSubobject<UManiacManfredInventoryVariables>("Inventory");
		
		Init();
	}
	
	void Init() 
	{
		/** initialize the namespaces */
		GameState->Init(this);
		this->VariableSets.Add(GameState);
		Inventory->Init(this);
		this->VariableSets.Add(Inventory);
	}
	
	/** Get the default GlobalVariables (a copy of the asset). */
	UFUNCTION(BlueprintPure, Category="ArticyGlobalVariables", meta=(HidePin="WorldContext", DefaultToSelf="WorldContext", DisplayName="GetArticyGV", keywords="global variables"))
	static UManiacManfredGlobalVariables* GetDefault(const UObject* WorldContext) 
	{
		return static_cast<UManiacManfredGlobalVariables*>(UArticyGlobalVariables::GetDefault(WorldContext));
	}
};
#pragma warning(pop)
